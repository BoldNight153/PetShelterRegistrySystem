
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  Serializable: 'Serializable'
});

exports.Prisma.ShelterScalarFieldEnum = {
  id: 'id',
  name: 'name',
  address: 'address',
  phone: 'phone',
  email: 'email',
  capacity: 'capacity',
  notes: 'notes',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.LocationScalarFieldEnum = {
  id: 'id',
  shelterId: 'shelterId',
  code: 'code',
  description: 'description',
  capacity: 'capacity',
  notes: 'notes',
  createdAt: 'createdAt'
};

exports.Prisma.OwnerScalarFieldEnum = {
  id: 'id',
  firstName: 'firstName',
  lastName: 'lastName',
  email: 'email',
  phone: 'phone',
  type: 'type',
  address: 'address',
  notes: 'notes',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PetOwnerScalarFieldEnum = {
  id: 'id',
  petId: 'petId',
  ownerId: 'ownerId',
  role: 'role',
  isPrimary: 'isPrimary',
  startDate: 'startDate',
  endDate: 'endDate',
  notes: 'notes'
};

exports.Prisma.MedicalRecordScalarFieldEnum = {
  id: 'id',
  petId: 'petId',
  visitDate: 'visitDate',
  vetName: 'vetName',
  recordType: 'recordType',
  notes: 'notes',
  files: 'files',
  createdAt: 'createdAt'
};

exports.Prisma.EventScalarFieldEnum = {
  id: 'id',
  petId: 'petId',
  type: 'type',
  occurredAt: 'occurredAt',
  fromShelterId: 'fromShelterId',
  toShelterId: 'toShelterId',
  notes: 'notes',
  createdAt: 'createdAt'
};

exports.Prisma.PetScalarFieldEnum = {
  id: 'id',
  name: 'name',
  species: 'species',
  breed: 'breed',
  sex: 'sex',
  dob: 'dob',
  microchip: 'microchip',
  color: 'color',
  weightKg: 'weightKg',
  sterilized: 'sterilized',
  status: 'status',
  isAlive: 'isAlive',
  deceasedAt: 'deceasedAt',
  notes: 'notes',
  intakeAt: 'intakeAt',
  shelterId: 'shelterId',
  locationId: 'locationId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.Sex = exports.$Enums.Sex = {
  MALE: 'MALE',
  FEMALE: 'FEMALE',
  UNKNOWN: 'UNKNOWN'
};

exports.PetStatus = exports.$Enums.PetStatus = {
  AVAILABLE: 'AVAILABLE',
  HOLD: 'HOLD',
  FOSTERED: 'FOSTERED',
  ADOPTED: 'ADOPTED',
  DECEASED: 'DECEASED',
  TRANSFERRED: 'TRANSFERRED'
};

exports.OwnerRole = exports.$Enums.OwnerRole = {
  OWNER: 'OWNER',
  FOSTER: 'FOSTER',
  EMERGENCY_CONTACT: 'EMERGENCY_CONTACT'
};

exports.Prisma.ModelName = {
  Shelter: 'Shelter',
  Location: 'Location',
  Owner: 'Owner',
  PetOwner: 'PetOwner',
  MedicalRecord: 'MedicalRecord',
  Event: 'Event',
  Pet: 'Pet'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/pheoniximac/FreeCodeCamp/build-consume-and-codument-a-rest-api/PetShelterRegistrySystem/backend/node_modules/@prisma/client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Users/pheoniximac/FreeCodeCamp/build-consume-and-codument-a-rest-api/PetShelterRegistrySystem/backend/prisma/schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "sqlite",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  // For local development we default to sqlite. To use Postgres in production,\n  // replace provider with \"postgresql\" and set DATABASE_URL to a postgres DSN.\n  provider = \"sqlite\"\n  url      = env(\"DATABASE_URL\")\n}\n\nenum Sex {\n  MALE\n  FEMALE\n  UNKNOWN\n}\n\nenum PetStatus {\n  AVAILABLE\n  HOLD\n  FOSTERED\n  ADOPTED\n  DECEASED\n  TRANSFERRED\n}\n\nenum OwnerRole {\n  OWNER\n  FOSTER\n  EMERGENCY_CONTACT\n}\n\nmodel Shelter {\n  id        String     @id @default(uuid())\n  name      String\n  address   Json?\n  phone     String?\n  email     String?\n  capacity  Int?\n  notes     String?\n  pets      Pet[]\n  locations Location[]\n  createdAt DateTime   @default(now())\n  updatedAt DateTime   @updatedAt\n}\n\nmodel Location {\n  id          String   @id @default(uuid())\n  shelter     Shelter  @relation(fields: [shelterId], references: [id], onDelete: Cascade)\n  shelterId   String\n  code        String // e.g. \"A-12\" or \"Room 3 / Cage 4\"\n  description String?\n  capacity    Int?\n  notes       String?\n  pets        Pet[]\n  createdAt   DateTime @default(now())\n}\n\nmodel Owner {\n  id        String     @id @default(uuid())\n  firstName String\n  lastName  String\n  email     String?    @unique\n  phone     String?\n  type      String? // individual | organization\n  address   Json?\n  notes     String?\n  pets      PetOwner[]\n  createdAt DateTime   @default(now())\n  updatedAt DateTime   @updatedAt\n\n  @@index([lastName, firstName])\n}\n\nmodel PetOwner {\n  id        String    @id @default(uuid())\n  pet       Pet       @relation(fields: [petId], references: [id], onDelete: Cascade)\n  petId     String\n  owner     Owner     @relation(fields: [ownerId], references: [id], onDelete: Cascade)\n  ownerId   String\n  role      OwnerRole @default(OWNER)\n  isPrimary Boolean   @default(false)\n  startDate DateTime  @default(now())\n  endDate   DateTime?\n  notes     String?\n\n  @@unique([petId, ownerId, role, startDate])\n}\n\nmodel MedicalRecord {\n  id         String   @id @default(uuid())\n  pet        Pet      @relation(fields: [petId], references: [id], onDelete: Cascade)\n  petId      String\n  visitDate  DateTime @default(now())\n  vetName    String?\n  recordType String?\n  notes      String?\n  files      Json?\n  createdAt  DateTime @default(now())\n}\n\nmodel Event {\n  id            String   @id @default(uuid())\n  pet           Pet      @relation(fields: [petId], references: [id], onDelete: Cascade)\n  petId         String\n  type          String\n  occurredAt    DateTime @default(now())\n  fromShelterId String?\n  toShelterId   String?\n  notes         String?\n  createdAt     DateTime @default(now())\n}\n\nmodel Pet {\n  id         String          @id @default(uuid())\n  name       String\n  species    String\n  breed      String?\n  sex        Sex             @default(UNKNOWN)\n  dob        DateTime?\n  microchip  String?         @unique\n  color      String?\n  weightKg   Float?\n  sterilized Boolean         @default(false)\n  status     PetStatus       @default(AVAILABLE)\n  isAlive    Boolean         @default(true)\n  deceasedAt DateTime?\n  notes      String?\n  intakeAt   DateTime?\n  shelterId  String?\n  shelter    Shelter?        @relation(fields: [shelterId], references: [id], onDelete: Restrict)\n  locationId String? // pin/cage location\n  location   Location?       @relation(fields: [locationId], references: [id], onDelete: SetNull)\n  owners     PetOwner[]\n  medical    MedicalRecord[]\n  events     Event[]\n  createdAt  DateTime        @default(now())\n  updatedAt  DateTime        @updatedAt\n\n  @@index([name])\n  @@index([species])\n}\n",
  "inlineSchemaHash": "c18873b79767724f2948fd551f4c75cc7229c9c482195c07965124f9d309ff42",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Shelter\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"capacity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"pets\",\"kind\":\"object\",\"type\":\"Pet\",\"relationName\":\"PetToShelter\"},{\"name\":\"locations\",\"kind\":\"object\",\"type\":\"Location\",\"relationName\":\"LocationToShelter\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Location\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"shelter\",\"kind\":\"object\",\"type\":\"Shelter\",\"relationName\":\"LocationToShelter\"},{\"name\":\"shelterId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"capacity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"pets\",\"kind\":\"object\",\"type\":\"Pet\",\"relationName\":\"LocationToPet\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Owner\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"firstName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"pets\",\"kind\":\"object\",\"type\":\"PetOwner\",\"relationName\":\"OwnerToPetOwner\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"PetOwner\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"pet\",\"kind\":\"object\",\"type\":\"Pet\",\"relationName\":\"PetToPetOwner\"},{\"name\":\"petId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"owner\",\"kind\":\"object\",\"type\":\"Owner\",\"relationName\":\"OwnerToPetOwner\"},{\"name\":\"ownerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"OwnerRole\"},{\"name\":\"isPrimary\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"startDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"MedicalRecord\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"pet\",\"kind\":\"object\",\"type\":\"Pet\",\"relationName\":\"MedicalRecordToPet\"},{\"name\":\"petId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"visitDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"vetName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"recordType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"files\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Event\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"pet\",\"kind\":\"object\",\"type\":\"Pet\",\"relationName\":\"EventToPet\"},{\"name\":\"petId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"occurredAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"fromShelterId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"toShelterId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Pet\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"species\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"breed\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sex\",\"kind\":\"enum\",\"type\":\"Sex\"},{\"name\":\"dob\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"microchip\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"color\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"weightKg\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"sterilized\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"PetStatus\"},{\"name\":\"isAlive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"deceasedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"intakeAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"shelterId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"shelter\",\"kind\":\"object\",\"type\":\"Shelter\",\"relationName\":\"PetToShelter\"},{\"name\":\"locationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"location\",\"kind\":\"object\",\"type\":\"Location\",\"relationName\":\"LocationToPet\"},{\"name\":\"owners\",\"kind\":\"object\",\"type\":\"PetOwner\",\"relationName\":\"PetToPetOwner\"},{\"name\":\"medical\",\"kind\":\"object\",\"type\":\"MedicalRecord\",\"relationName\":\"MedicalRecordToPet\"},{\"name\":\"events\",\"kind\":\"object\",\"type\":\"Event\",\"relationName\":\"EventToPet\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

